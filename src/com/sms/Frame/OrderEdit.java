package com.sms.Frame;

import com.sms.FileIO.Helper;
import com.sms.EditType.EditType;
import com.sms.Physical.Customer;
import com.sms.Physical.Order;
import com.sms.Physical.Product;
import com.sms.Panel.OrderPanelManager;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

public class OrderEdit extends javax.swing.JFrame {

    private EditType editType;
    private Order orders;
    OrderPanelManager orderPanelManager;
    
    public OrderEdit(OrderPanelManager orderPanelManager) {
        initComponents();
        
        editType = EditType.CREATE;
        this.orderPanelManager = orderPanelManager;
        
        initDataAndFillComponent();
    }

    public OrderEdit(OrderPanelManager orderingPanelManager, Order ordering) {
        initComponents();
        
        
        editType = EditType.EDIT;
        this.orders = ordering;

        this.orderPanelManager = orderingPanelManager;
        
        initDataAndFillComponent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btEdit = new javax.swing.JButton();
        lbCustomer = new javax.swing.JLabel();
        lbProduct = new javax.swing.JLabel();
        cbProduct = new javax.swing.JComboBox<>();
        cbCustomer = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        lbQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbQuantity.setText("Quantity");

        jLabel1.setText("Ordering Editor");

        btEdit.setText("Save");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        lbCustomer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCustomer.setText("Customer");

        lbProduct.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbProduct.setText("Product");

        cbProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btEdit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantity)
                            .addComponent(cbCustomer, 0, 180, Short.MAX_VALUE)
                            .addComponent(cbProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCustomer)
                    .addComponent(cbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btEdit)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        
        orders.pcode = orderPanelManager.entities.products.get(cbProduct.getSelectedIndex()).pcode;
        orders.ccode = orderPanelManager.entities.customers.get(cbCustomer.getSelectedIndex()).ccode;
        orders.quantity = Integer.parseInt(txtQuantity.getText());
//
        if(editType == EditType.CREATE){
            orderPanelManager.entities.orders.add(orders);
        }
        this.dispose();
        orderPanelManager.loadDataToTable();
    }//GEN-LAST:event_btEditActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEdit;
    private javax.swing.JComboBox<String> cbCustomer;
    private javax.swing.JComboBox<String> cbProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbCustomer;
    private javax.swing.JLabel lbProduct;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void initDataAndFillComponent() {
        
        String[] arrProductName = new String[orderPanelManager.entities.products.size()];
        for (int i = 0; i < orderPanelManager.entities.products.size(); i++) {
            arrProductName[i] = orderPanelManager.entities.products.get(i).pro_name;
        }
        cbProduct.setModel(new DefaultComboBoxModel<String>(arrProductName));
       
        String[] arrCustomerName = new String[orderPanelManager.entities.customers.size()];
        for (int i = 0; i < orderPanelManager.entities.customers.size(); i++) {
            arrCustomerName[i] = orderPanelManager.entities.customers.get(i).cus_name;
        }
        cbCustomer.setModel(new DefaultComboBoxModel<String>(arrCustomerName));    
        
        
         if(editType == EditType.CREATE){
            orders = new Order();
            
            if((orderPanelManager.entities.products.size()) > 0)
                cbProduct.setSelectedIndex(0);
            
            if((orderPanelManager.entities.customers.size()) > 0)
                cbCustomer.setSelectedIndex(0);
            
        }else{
             
             cbProduct.setSelectedIndex(Helper.getIndexProductByCode(orderPanelManager.entities.products, orders.pcode));
             cbCustomer.setSelectedIndex(Helper.getIndexCustomerByCode(orderPanelManager.entities.customers, orders.ccode));
             
         }
        

        txtQuantity.setText(""+orders.quantity);
    }
}
